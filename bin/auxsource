# auxsource - A "sourceable" bash script to source a file somewhere in AUXSOURCE_PATH.
#
# Known limitations: Only up to 7 command line parameters can be passed to the sourced script.
#
# define all logic in a function to isolate local variables
#
function auxsource_main_func() {
    local scriptspec
    local scriptname
    local scriptdir
    local sourcefile
    local sourcefiledir
    local sourcepath
    local sourcedir
    local sourcecand
    local sourceparams
    local sourcefound
    local whereflag
    local idx
    local IFS
    scriptspec=$(readlink -f "${BASH_SOURCE[0]}")  # full spec
    scriptname=$(basename "$scriptspec")           # basename part
    scriptdir=$(dirname "$scriptspec")             # dirpart
    whereflag="n"
    if [[ "$1" == "-w" || "$1" == "--where" ]]; then
        whereflag="y"
        shift
    fi
    if [ -z "$1" -o "$1" == "--help" -o "$1" == "-h" ]; then
        # display help
        echo "Command:"
        echo "  $scriptname [-w] <filename> [<param> ...] # source file where 1st found in AUXSOURCE_PATH."
        echo "  $scriptname [-w] <dir/spec> [<param> ...] # source the file in specified directory."
        echo "  $scriptname -h | --help                   # display help."
        echo "  $scriptname -v | --version                # display version."
        return 0
    elif [ "$1" == "--version" -o "$1" == "-v" ]; then
        echo "$scriptname: version 2.1 (2017-06-27)"
        echo "Location: $scriptspec"
        return 0
    else
        sourcefile="$1"
        shift
        IFS=" "
        #sourceparams="$@"
        sourceparams=""
        idx="0"
        while [ "$#" != "0" ]; do
            if [ ! -z "$sourceparams" ]; then sourceparams="$sourceparams "; fi
            sourceparams="${sourceparams}\"$1\""
            shift
        done
        sourcefiledir="${sourcefile%/*}"
        if [ "$sourcefile" == "$sourcefiledir" ]; then sourcefiledir=""; fi
        if [ -z "$sourcefiledir" ]; then
            # no directory part in command line file parameter
            if [ -z "$AUXSOURCE_PATH" ]; then
                # auxsource env var not set
                if [ -z "$PATH" ]; then
                    # PATH not set
                    sourcepath=$(readlink -f ".")
                    sourcepath="$sourcepath:$scriptdir"
                else
                    # use PATH
                    sourcepath="$PATH"
                fi
            else
                # auxsource env var was set
                sourcepath="$AUXSOURCE_PATH"
            fi
            sourcefound="n"
            IFS=":"
            for sourcedir in $sourcepath; do
                sourcecand="$sourcedir/$sourcefile"
                if [ -e "$sourcecand" ]; then
                    sourcefound="y"
                    if [ "$whereflag" == "y" ]; then
                        echo "Found '$sourcecand'."
                    else
                        set -- # clear positional parameters
                        eval source "$sourcecand" $sourceparams
                    fi
                    break;
                fi
            done
            if [ "$sourcefound" == "n" ]; then
                echo "ERROR: $scriptname could not locate $sourcefile." >&2
                return 1
            fi
        else
            # directory specified in sourcefile
            sourcefile=$(readlink -f "$sourcefile")
            if [ -e "$sourcefile" ]; then
                if [ "$whereflag" == "y" ]; then
                    echo "Found '$sourcecand'."
                else
                    set --   # clear old positional parameters
                    eval source "$sourcefile" $sourceparams
                fi
            else
                echo "ERROR: $scriptname could not locate $sourcefile." >&2
                return 1
            fi
        fi
    fi
    return 0
}
#
# Now invoke the main function
#
auxsource_main_func $@
if [ "$?" == "0" ]; then
    unset auxsource_main_func
    true  # final status
else
    unset auxsource_main_func
    false # final status
fi
